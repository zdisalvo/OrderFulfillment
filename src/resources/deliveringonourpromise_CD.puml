@startuml

class Shell {
    - promiseHistoryClient PromiseHistoryClient
    - inputHandler ATAUserHandler

    - handleUserRequest()
    - renderPromiseHistoryTable(PromiseHistory)
    - renderOrderTable(Order)

}

class App {
    + getPromiseHistoryClient()
    + getPromiseHistoryByOrderIdActivity

}


class PromiseHistoryClient {
- getPromiseHistoryByOrderIdActivity GetPromiseHistoryByOrderIdActivity

+ PromiseHistoryClient(GetPromiseHistoryByOrderIdActivity)
+ getPromiseHistoryByOrderId(String)

}


class GetPromiseHistoryByOrderIdActivity {
- orderDao ReadOnlyDao<String, Order>
- promiseDao ReadOnlyDao<String, List<Promise>>

+ GetPromiseHistoryByOrderIdActivity(ReadOnlyDao<String, Order>
+ getPromiseHistoryByOrderId(String)
}


class OrderDao {
- omaClient OrderManipulationAuthorityClient

+ OrderDao(OrderManipulationAuthorityClient)
+ get(String)
- convertToOrderItem(OrderResultItem)

}


class PromiseDao {
- dpsClient DeliveryPromiseServiceClient
- omaClient OrderManipulationAuthorityClient

+ PromiseDao(DeliveryPromiseServiceClient, OrderManipulationAuthorityClient)
+ get(String)
- getDeliveryDateForOrderItem(String)
}


class OrderManipulationAuthorityClient {
- omaService OrderManipulationAuthority

+ OrderManipulationAuthorityClient(OrderManipulationAuthority)
+ getCustomerOrderByOrderId(String)
+ getCustomerOrderItemByOrderItemId(String)
}


class DeliveryPromiseServiceClient {
- dpService DeliveryPromiseService

+ DeliveryPromiseServiceClient(DeliveryPromiseService)
+ getDeliveryPromiseByOrderItemId(String)
}

class PromiseHistory {
}

class Promise {
}

class Order {
}

class OrderItem {
}



Promise --o PromiseHistory

Shell --o PromiseHistoryClient
PromiseHistoryClient --o GetPromiseHistoryByOrderIdActivity
GetPromiseHistoryByOrderIdActivity --o OrderDao
OrderDao --o OrderManipulationAuthorityClient
GetPromiseHistoryByOrderIdActivity --o PromiseDao
PromiseDao --o OrderManipulationAuthorityClient
PromiseDao --o DeliveryPromiseServiceClient


@enduml